{
  "contractName": "IERC1363Spender",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        },
        {
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onApprovalReceived",
      "outputs": [
        {
          "name": "",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onApprovalReceived\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Vittorio Minacori (https://github.com/vittominacori)\",\"details\":\"Interface for any contract that wants to support approveAndCall from ERC1363 token contracts as defined in https://github.com/ethereum/EIPs/issues/1363\",\"methods\":{\"onApprovalReceived(address,uint256,bytes)\":{\"details\":\"Any ERC1363 smart contract calls this function on the recipient after an `approve`. This function MAY throw to revert and reject the approval. Return of other than the magic value MUST result in the transaction being reverted. Note: the token contract address is always the message sender.\",\"params\":{\"data\":\"bytes Additional data with no specified format\",\"owner\":\"address The address which called `approveAndCall` function\",\"value\":\"uint256 The amount of tokens to be spent\"},\"return\":\"`bytes4(keccak256(\\\"onApprovalReceived(address,uint256,bytes)\\\"))` unless throwing\"}},\"title\":\"IERC1363Spender Interface\"},\"userdoc\":{\"methods\":{\"onApprovalReceived(address,uint256,bytes)\":{\"notice\":\"Handle the approval of ERC1363 tokens\"}}}},\"settings\":{\"compilationTarget\":{\"erc-payable-token/contracts/token/ERC1363/IERC1363Spender.sol\":\"IERC1363Spender\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"erc-payable-token/contracts/token/ERC1363/IERC1363Spender.sol\":{\"keccak256\":\"0x3a47c709718dc1ca2d5dc54ba95e3ea289a270242828999f27bae2eeed2c2a22\",\"urls\":[\"bzzr://4ff2fb1a1907eb8da91e7f8a5dc21d348ccfa1c541c83ed67ec0db18fe27f5a9\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.5.8;\n\n/**\n * @title IERC1363Spender Interface\n * @author Vittorio Minacori (https://github.com/vittominacori)\n * @dev Interface for any contract that wants to support approveAndCall\n *  from ERC1363 token contracts as defined in\n *  https://github.com/ethereum/EIPs/issues/1363\n */\ncontract IERC1363Spender {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0x7b04a2d0.\n     * 0x7b04a2d0 === bytes4(keccak256(\"onApprovalReceived(address,uint256,bytes)\"))\n     */\n\n    /**\n     * @notice Handle the approval of ERC1363 tokens\n     * @dev Any ERC1363 smart contract calls this function on the recipient\n     * after an `approve`. This function MAY throw to revert and reject the\n     * approval. Return of other than the magic value MUST result in the\n     * transaction being reverted.\n     * Note: the token contract address is always the message sender.\n     * @param owner address The address which called `approveAndCall` function\n     * @param value uint256 The amount of tokens to be spent\n     * @param data bytes Additional data with no specified format\n     * @return `bytes4(keccak256(\"onApprovalReceived(address,uint256,bytes)\"))`\n     *  unless throwing\n     */\n    function onApprovalReceived(address owner, uint256 value, bytes memory data) public returns (bytes4);\n}\n",
  "sourcePath": "erc-payable-token/contracts/token/ERC1363/IERC1363Spender.sol",
  "ast": {
    "absolutePath": "erc-payable-token/contracts/token/ERC1363/IERC1363Spender.sol",
    "exportedSymbols": {
      "IERC1363Spender": [
        1561
      ]
    },
    "id": 1562,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1549,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:13"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title IERC1363Spender Interface\n@author Vittorio Minacori (https://github.com/vittominacori)\n@dev Interface for any contract that wants to support approveAndCall\n from ERC1363 token contracts as defined in\n https://github.com/ethereum/EIPs/issues/1363",
        "fullyImplemented": false,
        "id": 1561,
        "linearizedBaseContracts": [
          1561
        ],
        "name": "IERC1363Spender",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice Handle the approval of ERC1363 tokens\n@dev Any ERC1363 smart contract calls this function on the recipient\nafter an `approve`. This function MAY throw to revert and reject the\napproval. Return of other than the magic value MUST result in the\ntransaction being reverted.\nNote: the token contract address is always the message sender.\n@param owner address The address which called `approveAndCall` function\n@param value uint256 The amount of tokens to be spent\n@param data bytes Additional data with no specified format\n@return `bytes4(keccak256(\"onApprovalReceived(address,uint256,bytes)\"))`\n unless throwing",
            "id": 1560,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onApprovalReceived",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1556,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1551,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1560,
                  "src": "1240:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1550,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1240:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1553,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1560,
                  "src": "1255:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1552,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1255:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1555,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 1560,
                  "src": "1270:17:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1554,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1270:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1239:49:13"
            },
            "returnParameters": {
              "id": 1559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1558,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1560,
                  "src": "1305:6:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1557,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1305:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1304:8:13"
            },
            "scope": 1561,
            "src": "1212:101:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1562,
        "src": "301:1014:13"
      }
    ],
    "src": "0:1316:13"
  },
  "legacyAST": {
    "absolutePath": "erc-payable-token/contracts/token/ERC1363/IERC1363Spender.sol",
    "exportedSymbols": {
      "IERC1363Spender": [
        1561
      ]
    },
    "id": 1562,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1549,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:13"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title IERC1363Spender Interface\n@author Vittorio Minacori (https://github.com/vittominacori)\n@dev Interface for any contract that wants to support approveAndCall\n from ERC1363 token contracts as defined in\n https://github.com/ethereum/EIPs/issues/1363",
        "fullyImplemented": false,
        "id": 1561,
        "linearizedBaseContracts": [
          1561
        ],
        "name": "IERC1363Spender",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice Handle the approval of ERC1363 tokens\n@dev Any ERC1363 smart contract calls this function on the recipient\nafter an `approve`. This function MAY throw to revert and reject the\napproval. Return of other than the magic value MUST result in the\ntransaction being reverted.\nNote: the token contract address is always the message sender.\n@param owner address The address which called `approveAndCall` function\n@param value uint256 The amount of tokens to be spent\n@param data bytes Additional data with no specified format\n@return `bytes4(keccak256(\"onApprovalReceived(address,uint256,bytes)\"))`\n unless throwing",
            "id": 1560,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onApprovalReceived",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1556,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1551,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1560,
                  "src": "1240:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1550,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1240:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1553,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1560,
                  "src": "1255:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1552,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1255:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1555,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 1560,
                  "src": "1270:17:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1554,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1270:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1239:49:13"
            },
            "returnParameters": {
              "id": 1559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1558,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1560,
                  "src": "1305:6:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1557,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1305:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1304:8:13"
            },
            "scope": 1561,
            "src": "1212:101:13",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1562,
        "src": "301:1014:13"
      }
    ],
    "src": "0:1316:13"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.9",
  "updatedAt": "2019-05-10T14:36:49.402Z",
  "devdoc": {
    "author": "Vittorio Minacori (https://github.com/vittominacori)",
    "details": "Interface for any contract that wants to support approveAndCall from ERC1363 token contracts as defined in https://github.com/ethereum/EIPs/issues/1363",
    "methods": {
      "onApprovalReceived(address,uint256,bytes)": {
        "details": "Any ERC1363 smart contract calls this function on the recipient after an `approve`. This function MAY throw to revert and reject the approval. Return of other than the magic value MUST result in the transaction being reverted. Note: the token contract address is always the message sender.",
        "params": {
          "data": "bytes Additional data with no specified format",
          "owner": "address The address which called `approveAndCall` function",
          "value": "uint256 The amount of tokens to be spent"
        },
        "return": "`bytes4(keccak256(\"onApprovalReceived(address,uint256,bytes)\"))` unless throwing"
      }
    },
    "title": "IERC1363Spender Interface"
  },
  "userdoc": {
    "methods": {
      "onApprovalReceived(address,uint256,bytes)": {
        "notice": "Handle the approval of ERC1363 tokens"
      }
    }
  }
}